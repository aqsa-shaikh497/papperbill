function generateUniqueId() {
  if (!localStorage.getItem("uid")) {
    const uniqueId =
      new Date().valueOf() + Math.random().toString().substring(2, 8);
    localStorage.setItem("uid", uniqueId);
  }
}
document.addEventListener("DOMContentLoaded", () => {
  generateUniqueId();
});

const phoneCheck = /[5-9]{1}[0-9]{9}/;
const userDetails = {};

let iti; // Global variable to access intlTelInput instance

function getDetails() {
  $("#collect_user_details").modal("show");
}

// Modified phone validation to work with country code
function validatePhoneWithCountryCode() {
  const phoneInput = document.getElementById("phone_number");
  if (!phoneInput || !iti) return;

  const fullNumber = iti.getNumber(); // Gets number with country code like "+919876543210"
  const countryCode = iti.getSelectedCountryData().dialCode; // Gets just country code like "91"
  const countryName = iti.getSelectedCountryData().name; // Gets country name like "India"
  const isValid = iti.isValidNumber(); // Validates the complete number

  if (isValid) {
    // Store phone number with country code
    userDetails.phone_number = fullNumber; // "+919876543210"
    userDetails.country_code = countryCode; // "91"
    userDetails.country_name = countryName; // "India"
    userDetails.pageName = window.location.href;
    userDetails.userDeviceDetails = navigator.userAgent;

    document.getElementById("error_message").style.display = "none";
  } else {
    // Clear invalid data
    userDetails.phone_number = null;
    userDetails.country_code = null;
    userDetails.country_name = null;

    document.getElementById("error_message").style.display = "block";
  }
}

// Function to detect user's country from IP address
async function detectUserCountry() {
  try {
    const response = await fetch('https://ipapi.co/json/');
    const data = await response.json();
    return data.country_code?.toLowerCase() || 'in'; // Default to India if detection fails
  } catch (error) {
    console.log('Error detecting country from IP:', error);
    return 'in'; // Default to India on error
  }
}

// Initialize phone input with event listeners
async function initializePhoneInput() {
  const phoneInput = document.getElementById("phone_number");
  if (!phoneInput) return;

  // Detect user's country from IP
  const detectedCountry = await detectUserCountry();

  // Initialize intl-tel-input
  if (window.intlTelInput) {
    iti = window.intlTelInput(phoneInput, {
      initialCountry: detectedCountry,
      preferredCountries: ["in", "us", "gb"],
      separateDialCode: true,
      utilsScript:
        "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js",
    });

    // Add validation on input change
    phoneInput.addEventListener("input", validatePhoneWithCountryCode);
    phoneInput.addEventListener("blur", validatePhoneWithCountryCode);
  }
}

// Initialize when DOM is ready
document.addEventListener("DOMContentLoaded", initializePhoneInput);

function storeUserData(userDetails) {
  fetch("/api/ns/collect-number/", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(userDetails),
  })
    .then((res) => res.json())
    .catch((err) => console.log(err));
}

function startDownload(source) {
  const downloadDetails = {
    body: {},
    queryObj: {},
  };
  downloadDetails.body.hostname = window.location.hostname;
  downloadDetails.body.pageName = window.location.pathname;
  downloadDetails.body.userDeviceDetails = navigator.userAgent;
  downloadDetails.body.uniqueId = localStorage.getItem("uid");

  // Use phone number with country code if available
  downloadDetails.body.phoneNumber = userDetails.phone_number
    ? userDetails.phone_number
    : null;
  downloadDetails.body.countryCode = userDetails.country_code
    ? userDetails.country_code
    : null;
  downloadDetails.body.countryName = userDetails.country_name
    ? userDetails.country_name
    : null;

  const query = new URL(window.location.href).search.substring(1);
  const params = query.split("&");
  if (params.length >= 1) {
    for (const item of params) {
      const data = item.split("=");
      downloadDetails.queryObj[`${data[0]}`] = decodeURIComponent(data[1]);
      if (data[0] === "referrer_code") {
        downloadDetails.referrer_code = decodeURIComponent(data[1]);
      }
    }
  }
  downloadDetails.body.cta = source ? source : "button-download";
  downloadDetails.urlSource = document.referrer;

  // Only store user data if we have a valid phone number
  if (userDetails.phone_number) {
    storeUserData(userDetails);
  }
  $("#collect_user_details").modal("hide");
  dwnldDesktopApplicationNew(downloadDetails);
  $("#collect_user_details").modal("hide");
}

document.addEventListener("keydown", function (evt) {
  const element = $("#collect_user_details");
  if (element.is(":visible")) {
    evt = evt || window.event;
    if (evt.keyCode == 27) {
      evt.preventDefault();
      startDownload();
    }
  }
});

function createQueryString(data) {
  return Object.keys(data)
    .map((key) => {
      let val = data[key];
      if (val !== null && typeof val === "object") val = createQueryString(val);
      return `${key}=${encodeURIComponent(`${val}`.replace(/\s/g, "_"))}`;
    })
    .join("&");
}

function dwnldDesktopApplicationNew(searchParams) {
  var link = document.createElement("a");
  const queryString = createQueryString(searchParams);
  link.href = "/desktop/download-v3?" + queryString;
  link.dispatchEvent(new MouseEvent("click"));
  $(".close.desk-dwn").click();
}
